---
- name: Load Contents of Blueprint
  ansible.builtin.set_fact:
    blueprint_contents: "{{ lookup('file', blueprint_source_dir + '/blueprint.toml') }}"
  become: no

- name: Extract Blueprint Version
  ansible.builtin.set_fact:
    blueprint_version: "{{ blueprint_contents | regex_search('^version.*\"(.*)\"', '\\1', multiline=True) | first }}"

- name: List Finished Builds
  ansible.builtin.command: >
    composer-cli -j compose list finished
  changed_when: false
  register: compose_list

- name: Assert Finished Build ID Found
  ansible.builtin.assert:
    fail_msg: "Did not find a valid finished build for the commit id {{ build_commit_id }}!"
    that:
      - compose_list.stdout | from_json | selectattr('id', 'equalto', build_commit_id) | list | length == 1

- name: Set Remote Tar Directory
  ansible.builtin.set_fact:
    tar_directory: "{{ tar_base }}{{ build_commit_id }}"

- name: Create Remote Tar Directory
  ansible.builtin.file:
    path: "{{ tar_directory }}"
    state: directory

- name: Generate Edge Image File
  ansible.builtin.command: >
    composer-cli compose image {{ build_commit_id }}
  args:
    chdir: "{{ tar_directory }}"

- name: Find Edge Image File
  ansible.builtin.find:
    age: "-5m"
    age_stamp: ctime
    depth: 0
    paths: "{{ tar_directory }}"
    patterns:
      - "{{ build_commit_id }}-container.tar"
    use_regex: yes
  register: find_results
  failed_when:
    - find_results.failed == true
    - find_results.files | list != 1

- name: Create Local Tar Directory
  ansible.builtin.file:
    path: "{{ tar_directory }}"
    state: directory
  become: no

- name: Fetch RFE Build tar
  become: no
  ansible.builtin.fetch:
    dest: "{{ find_results.files[0].path }}"
    flat: yes
    src: "{{ find_results.files[0].path }}"

- name: Set Tag List
  ansible.builtin.set_fact:
    tag_list:
      - latest
      - "{{ blueprint_version }}"
  become: no

- name: Save Tag List to Output File
  ansible.builtin.copy:
    content: "{{ tag_list | to_json }}"
    dest: "{{ image_tags_output_file }}"
  become: no

---
- name: Copy blueprint template packages are listed in defaults or add with -e blueprint_packages=<packagename>
  ansible.builtin.template:
    src: templates/blueprint.toml.j2
    dest: "/tmp/blueprint.toml"
    
- name: Push Blueprint to Server
  ansible.builtin.command: >
    composer-cli blueprints push "{{ build_blueprint_dir }}/blueprint.toml"

- name: Resolve Dependencies
  ansible.builtin.command: >
    composer-cli blueprints depsolve {{ blueprint_name }}

- name: Freeze Blueprint
  ansible.builtin.command: >
    composer-cli -j blueprints freeze {{ blueprint_name }}
  register: frozen_blueprint

- name: Set Blueprint Version Number
  ansible.builtin.set_fact:
    blueprint_version: "{{ (frozen_blueprint.stdout | from_json).blueprints[0].blueprint.version }}"

- name: Image Builder
  block:
    - name: Compose Image
      ansible.builtin.command: >
        composer-cli -j compose start-ostree {{ blueprint_name }} rhel-edge-container
      register: composed_image

    - name: Set Build Commit ID
      ansible.builtin.set_fact:
        build_commit_id: "{{ (composed_image.stdout | from_json).build_id }}"

    - name: Wait for Image Build to Complete
      ansible.builtin.command: >
        composer-cli -j compose status
      changed_when: false
      delay: 30
      failed_when: >
        not (image_build_status.stdout | from_json | selectattr('id', 'equalto', build_commit_id) | list | first).finished and
        (image_build_status.stdout | from_json | selectattr('id', 'equalto', build_commit_id) | list | first).status != "FINISHED"
      register: image_build_status
      retries: 200
      until: >
        (image_build_status.stdout | from_json | selectattr('id', 'equalto', build_commit_id) | list | first).finished and
        (image_build_status.stdout | from_json | selectattr('id', 'equalto', build_commit_id) | list | first).status == "FINISHED"

- name: Save Build Commit ID to File
  ansible.builtin.copy:
    content: "{{ build_commit_id }}"
    dest: "{{ build_commit_output_file }}"
  become: no
